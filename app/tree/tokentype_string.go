// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package tree

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LEFT_PAREN-0]
	_ = x[RIGHT_PAREN-1]
	_ = x[LEFT_BRACE-2]
	_ = x[RIGHT_BRACE-3]
	_ = x[COMMA-4]
	_ = x[DOT-5]
	_ = x[MINUS-6]
	_ = x[PLUS-7]
	_ = x[SEMICOLON-8]
	_ = x[SLASH-9]
	_ = x[STAR-10]
	_ = x[Bang-11]
	_ = x[BangEqual-12]
	_ = x[Equal-13]
	_ = x[EqualEqual-14]
	_ = x[Greater-15]
	_ = x[GreaterEqual-16]
	_ = x[Less-17]
	_ = x[LessEqual-18]
	_ = x[Identifier-19]
	_ = x[String-20]
	_ = x[Number-21]
	_ = x[And-22]
	_ = x[Class-23]
	_ = x[Else-24]
	_ = x[False-25]
	_ = x[Fun-26]
	_ = x[For-27]
	_ = x[If-28]
	_ = x[Nil-29]
	_ = x[Or-30]
	_ = x[Print-31]
	_ = x[Return-32]
	_ = x[Super-33]
	_ = x[This-34]
	_ = x[True-35]
	_ = x[Var-36]
	_ = x[While-37]
	_ = x[EOF-38]
}

const _TokenType_name = "LEFT_PARENRIGHT_PARENLEFT_BRACERIGHT_BRACECOMMADOTMINUSPLUSSEMICOLONSLASHSTARBangBangEqualEqualEqualEqualGreaterGreaterEqualLessLessEqualIdentifierStringNumberAndClassElseFalseFunForIfNilOrPrintReturnSuperThisTrueVarWhileEOF"

var _TokenType_index = [...]uint8{0, 10, 21, 31, 42, 47, 50, 55, 59, 68, 73, 77, 81, 90, 95, 105, 112, 124, 128, 137, 147, 153, 159, 162, 167, 171, 176, 179, 182, 184, 187, 189, 194, 200, 205, 209, 213, 216, 221, 224}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
